version: "3"

services:
  zookeeper:
    image: quay.io/debezium/zookeeper:1.8
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      debezium_net:
        ipv4_address: 172.30.0.2
    healthcheck:
      # test: nc -z localhost 2181 || exit -1
      test: ["CMD-SHELL", "/zookeeper/bin/zkServer.sh status || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  kafka:
    image: quay.io/debezium/kafka:1.8
    ports:
      - 9092:9092
    networks:
      debezium_net:
        ipv4_address: 172.30.0.3
    links:
      - zookeeper
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/kafka/bin/kafka-topics.sh --list --bootstrap-server 172.30.0.3:9092 || exit 1",
        ]
      interval: 15s
      timeout: 10s
      retries: 4

  debezium:
    image: quay.io/debezium/connect:2.4.2.Final
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    restart: always
    ports:
      - 8083:8083
    volumes:
      - ./persistence-volume/logs/debezium:/kafka/logs
    networks:
      debezium_net:
        ipv4_address: 172.30.0.10
    links:
      - zookeeper
      - kafka
      - postgres
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl 172.30.0.10:8083/connectors || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s

  fluentd:
    image: fluent/fluentd-aggregator:debian-1.2.0
    volumes:
      - ./fluentd:/fluentd/etc
      - ./persistence-volume/logs/debezium:/var/log/debezium
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    links:
      - debezium
    depends_on:
      debezium:
        condition: service_healthy

  debezium-init:
    build: ./debezium-init
    networks:
      debezium_net:
        ipv4_address: 172.30.0.11
    links:
      - debezium
    depends_on:
      debezium:
        condition: service_healthy

  postgres:
    image: postgres:12-alpine
    user: postgres
    command: postgres -c wal_level=logical
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    restart: always
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      debezium_net:
        ipv4_address: 172.30.0.20
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  debezium_net:
    name: debezium_net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24
